name: CI/CD

on:
    push:
        branches: [main, develop]
        tags:
            - '*'
    pull_request:
        branches: [main, develop]

jobs:
    test-and-build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: |
                  npm install
                  cd client && npm install
                  cd ../server && npm install

            - name: Run server tests
              run: cd server && npm test

            - name: Install Playwright browsers
              run: cd client && npx playwright install --with-deps chromium

            - name: Run client E2E tests
              run: cd client && npm test

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report
                  path: client/playwright-report/
                  retention-days: 30

            - name: Build client
              run: cd client && npm run build

            - name: Verify build artifacts
              run: |
                  test -f client/dist/index.html
                  echo "✅ Build successful"

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: client-build
                  path: client/dist/
                  retention-days: 7

    docker:
        runs-on: ubuntu-latest
        needs: test-and-build
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/'))
        steps:
            - uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: client-build
                  path: client/dist/

            - name: Docker Login
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_HUB_ID }}
                  password: ${{ secrets.DOCKER_HUB_PASSWORD }}

            - name: Extract tag name
              id: extract_tag
              run: |
                  if [[ "${{ github.ref }}" == refs/tags/* ]]; then
                    echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
                  elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
                    echo "tag=dev" >> $GITHUB_OUTPUT
                  elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
                    echo "tag=latest" >> $GITHUB_OUTPUT
                  fi

            - name: Build and Push Docker image
              run: |
                  TAG=${{ steps.extract_tag.outputs.tag }}
                  docker build -t ruo239/py-editor:$TAG .
                  docker push ruo239/py-editor:$TAG
                  echo "✅ Docker image pushed: ruo239/py-editor:$TAG"
